// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  name        String
  bio         String?
  profilePic  String?  // Supabase CDN URL
  role        Role     @default(USER)
  posts       Post[]
  comments    Comment[]
  reactions   Reaction[]
  announcements Announcement[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Allowlist {
  id        String   @id @default(cuid())
  email     String   @unique
  addedBy   String
  createdAt DateTime @default(now())
}

model Post {
  id        String    @id @default(cuid())
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  content   String
  mediaUrl  String?
  comments  Comment[]
  reactions Reaction[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String    @id @default(cuid())
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  content   String
  createdAt DateTime  @default(now())
}

model Reaction {
  id        String   @id @default(cuid())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  type      String   // e.g. "like", "love", "laugh"
  createdAt DateTime @default(now())
  
  @@unique([postId, userId, type])
}

model Announcement {
  id        String   @id @default(cuid())
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  content   String
  mediaUrl  String?
  isPinned  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
